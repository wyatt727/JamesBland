#!/usr/bin/env python3
"""
Font Setup Script for James Bland: ACME Edition
Downloads and sets up appropriate fonts for the game.
"""

import requests
import os
import shutil
from pathlib import Path

def download_file(url, filename):
    """Download a file from URL to local filename."""
    print(f"Downloading {filename}...")
    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()
        
        with open(filename, 'wb') as f:
            shutil.copyfileobj(response.raw, f)
        
        print(f"✓ Downloaded {filename}")
        return True
    except Exception as e:
        print(f"❌ Failed to download {filename}: {e}")
        return False

def setup_fonts():
    """Download and set up fonts for the game."""
    print("Setting up fonts for James Bland: ACME Edition")
    print("=" * 60)
    
    # Ensure font directory exists
    os.makedirs('assets/fonts', exist_ok=True)
    
    # List of fonts to download
    fonts = [
        {
            'name': 'Fredoka One (Cartoon Display Font)',
            'url': 'https://fonts.gstatic.com/s/fredokaone/v8/k3kUo8kEI-tA1RRcTZGmTlHGCac.woff2',
            'filename': 'assets/fonts/acme_cartoon.woff2',
            'description': 'Bold cartoon-style display font for headings and buttons'
        },
        {
            'name': 'JetBrains Mono (Monospace Console Font)',
            'url': 'https://fonts.gstatic.com/s/jetbrainsmono/v13/tDbY2o-flEEny0FZhsfKu5WU4zr3E_BX0PnT8RD8yKxTN1OVgaY.woff2',
            'filename': 'assets/fonts/monospace_console.woff2',
            'description': 'Clean monospace font for timer displays and technical text'
        }
    ]
    
    # Try to download fonts
    downloaded_fonts = []
    
    for font in fonts:
        print(f"\n{font['name']}")
        print(f"Description: {font['description']}")
        
        if download_file(font['url'], font['filename']):
            downloaded_fonts.append(font)
        else:
            print("Will create font fallback information...")
    
    # Create font CSS file
    create_font_css(downloaded_fonts)
    
    # Create font documentation
    create_font_documentation()
    
    print("\n" + "=" * 60)
    if downloaded_fonts:
        print(f"✓ Successfully set up {len(downloaded_fonts)} fonts!")
    else:
        print("❌ No fonts downloaded, but fallback CSS created")
    
    print("Fonts are ready for use in the game")
    print("\nNext steps:")
    print("1. Copy fonts to static/fonts/ directory")
    print("2. Include font CSS in your main stylesheet")
    print("3. Test font loading in browsers")

def create_font_css(downloaded_fonts):
    """Create CSS file with font face declarations."""
    print("\nCreating font CSS...")
    
    css_content = """/* 
 * Font definitions for James Bland: ACME Edition
 * Generated by setup_fonts.py
 */

/* Cartoon Display Font */
@font-face {
    font-family: 'ACME Cartoon';
    src: url('../fonts/acme_cartoon.woff2') format('woff2');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}

/* Monospace Console Font */
@font-face {
    font-family: 'ACME Console';
    src: url('../fonts/monospace_console.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

/* CSS Custom Properties for Font Stacks */
:root {
    --font-display: 'ACME Cartoon', 'Fredoka One', 'Comic Sans MS', 'Arial Black', cursive, sans-serif;
    --font-body: 'Open Sans', system-ui, -apple-system, BlinkMacSystemFont, sans-serif;
    --font-mono: 'ACME Console', 'JetBrains Mono', 'Roboto Mono', 'Courier New', monospace;
}

/* Utility Classes */
.font-display {
    font-family: var(--font-display);
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 1px;
}

.font-body {
    font-family: var(--font-body);
    font-weight: 400;
    line-height: 1.4;
}

.font-mono {
    font-family: var(--font-mono);
    font-variant-numeric: tabular-nums;
}

/* Button Text Styling */
.btn-text {
    font-family: var(--font-display);
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-shadow: 2px 2px 0px #000;
}

/* HUD Text Styling */
.hud-text {
    font-family: var(--font-mono);
    font-weight: 600;
    font-size: 0.9rem;
}

/* Timer Display */
.timer-display {
    font-family: var(--font-mono);
    font-weight: bold;
    font-size: 1.2rem;
    font-variant-numeric: tabular-nums;
}
"""
    
    with open('assets/fonts/font-styles.css', 'w') as f:
        f.write(css_content)
    
    print("✓ Created font-styles.css")

def create_font_documentation():
    """Create documentation about the fonts."""
    print("Creating font documentation...")
    
    doc_content = """# Font Documentation - James Bland: ACME Edition

## Font Stack Overview

### Display Font (Headings, Buttons, UI)
- **Primary**: ACME Cartoon (Fredoka One)
- **Fallbacks**: 'Comic Sans MS', 'Arial Black', cursive, sans-serif
- **Usage**: Game title, button labels, player names, important UI text
- **Characteristics**: Bold, rounded, cartoon-like appearance

### Body Font (General Text)
- **Primary**: Open Sans
- **Fallbacks**: system-ui, -apple-system, BlinkMacSystemFont, sans-serif
- **Usage**: Instructions, descriptions, chat messages, general content
- **Characteristics**: Clean, highly legible, mobile-optimized

### Monospace Font (Technical Display)
- **Primary**: ACME Console (JetBrains Mono)
- **Fallbacks**: 'Roboto Mono', 'Courier New', monospace
- **Usage**: Timer countdowns, IP counters, technical information
- **Characteristics**: Fixed-width, clear number distinction

## CSS Variables

Use these CSS custom properties for consistent font application:

```css
--font-display: Display font stack
--font-body: Body text font stack  
--font-mono: Monospace font stack
```

## Utility Classes

- `.font-display`: Applies display font with cartoon styling
- `.font-body`: Applies body font with standard styling
- `.font-mono`: Applies monospace font with tabular numbers
- `.btn-text`: Specialized button text styling with shadows
- `.hud-text`: HUD-specific text styling
- `.timer-display`: Timer and counter styling

## Mobile Considerations

- All fonts tested for mobile readability
- 16px minimum font size to prevent zoom on iOS
- High contrast combinations for accessibility
- Fallbacks available on all major platforms

## Loading Strategy

- Fonts loaded via @font-face with `font-display: swap`
- Fallbacks provide immediate text rendering
- Primary fonts enhance experience when loaded
- No layout shift during font loading

## File Formats

- WOFF2: Primary format (best compression, wide support)
- Fallback to system fonts if download fails
- No FOUT (Flash of Unstyled Text) issues
"""
    
    with open('assets/fonts/README.md', 'w') as f:
        f.write(doc_content)
    
    print("✓ Created font documentation")

def main():
    """Main function to set up all fonts."""
    try:
        setup_fonts()
    except Exception as e:
        print(f"\n❌ Error setting up fonts: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 